#!/bin/sh

LOG_DIR=/var/log/datadog
INSTALL_DIR=/opt/datadog-agent
OPT_APP_DIR="$INSTALL_DIR/Datadog Agent.app"
APP_DIRECTORY="/Applications/Datadog Agent.app"
APP_CONF_DIR="$APP_DIRECTORY/Contents/Resources"
RUN_DIR="$APP_CONF_DIR/run"

# We log stdout & stderr of this script
LOG_FILE=$LOG_DIR/postinstall.log
mkdir -p $LOG_DIR
exec > $LOG_FILE 2>&1

# OS/Distro Detection
DISTRIBUTION=$(grep -Eo "(Debian|Ubuntu|RedHat|CentOS|openSUSE|Amazon)" /etc/issue 2>/dev/null || uname -s)

if [ $DISTRIBUTION = "Darwin" ]; then
  # Determine current user if he is using the Graphical installer
  INSTALL_USER=$(ps aux | grep "CoreServices/Installer" | grep -v grep | awk '{print $1;}')
  
  # Otherwise, we hope he is using the install script and try to this user
  # If it fails, no choice but to use root :'(
  if [ -z "$INSTALL_USER" ] || [ "$INSTALL_USER" == "root" ]; then
    SCRIPT_INSTALL="yes"
    INSTALL_USER=`cat /tmp/datadog-install-user || echo 'root'`
    rm /tmp/datadog-install-user || true
  fi

  if [ -e "$OPT_APP_DIR" ]; then
    # Prepare log dir
    chown -R $INSTALL_USER:admin $LOG_DIR
    chmod 755 $LOG_DIR

    # Installing the app
    mv $INSTALL_DIR/Datadog\ Agent.app /Applications
  fi

  if [ "$INSTALL_USER" == "root" ]; then
    echo 'INSTALL_USER is set to root, Datadog Agent app has been installed'
    echo 'but is not configured. Running Datadog Agent as root is not advised!'
    exit 1
  fi

  # Set the run directory for supervisord
  mkdir -p "$RUN_DIR"
  chown -R $INSTALL_USER:admin "$RUN_DIR"
  chmod 755 "$RUN_DIR"

  sed "s|USER_NAME|$INSTALL_USER|" "$APP_CONF_DIR/com.datadoghq.Agent.plist.example" > "$APP_CONF_DIR/com.datadoghq.Agent.plist"
  
  # Copying existing conf is one exists
  if [ -e "/tmp/datadog.conf" ]; then
    mv -f /tmp/datadog.conf "$APP_CONF_DIR/"
    mv -f /tmp/conf.d/* "$APP_CONF_DIR/conf.d"
    cp -n /tmp/checks.d/* "$APP_CONF_DIR/checks.d"
    rm -rf /tmp/datadog.conf /tmp/conf.d /tmp/checks.d
  # Or copying default
  else
    sed -E 's/^api_key:$/api_key: APIKEY/' "$APP_CONF_DIR/datadog.conf.example" > "$APP_CONF_DIR/datadog.conf"
  fi

  # Correct rights
  chown $INSTALL_USER:admin "$APP_CONF_DIR/datadog.conf"
  chown -R $INSTALL_USER:admin "$APP_CONF_DIR/conf.d" "$APP_CONF_DIR/checks.d"

  # `datadog-agent` command line
  mkdir -p /usr/local/bin
  ln -s "$APP_CONF_DIR/../MacOS/datadog-agent" /usr/local/bin/datadog-agent

  # Link for conf files (let's ease the user's life)
  USER_HOME=`sudo -Hu $INSTALL_USER sh -c 'echo $HOME'`
  sudo -Hu $INSTALL_USER mkdir -p "$USER_HOME/.datadog-agent"
  rm -f "$USER_HOME/.datadog-agent/conf.d" "$USER_HOME/.datadog-agent/datadog.conf" "$USER_HOME/.datadog-agent/checks.d"
  sudo -Hu $INSTALL_USER ln -s "$APP_CONF_DIR/conf.d" "$USER_HOME/.datadog-agent/conf.d"
  sudo -Hu $INSTALL_USER ln -s "$APP_CONF_DIR/datadog.conf" "$USER_HOME/.datadog-agent/datadog.conf"
  sudo -Hu $INSTALL_USER ln -s "$APP_CONF_DIR/checks.d" "$USER_HOME/.datadog-agent/checks.d"

  # Error if app not properly installed
  if [ ! -e "$APP_CONF_DIR/datadog.conf" ]; then
    exit 1
  fi

  # Start the app only if it's not a script install
  if [ -z "$SCRIPT_INSTALL" ]; then
    # Trick to get the right temp dir (for status pickles)
    export TMPDIR=`sudo -u $INSTALL_USER getconf DARWIN_USER_TEMP_DIR`
    sudo -Eu $INSTALL_USER open -a 'Datadog Agent.app'
  fi

  # And finally configure the app to be launched at login
  sudo -u $INSTALL_USER osascript -e 'tell application "System Events" to delete every login item whose name is "Datadog Agent"'
  # It uses the hardcoded path instead of $APP_DIRECTORY because
  # osascript wants '' (bash doesn't interpolate $APP_DIRECTORY) and no "" 
  sudo -u $INSTALL_USER osascript -e 'tell application "System Events" to make login item at end with properties {path:"/Applications/Datadog Agent.app", name:"Datadog Agent", hidden:false}'
fi
exit 0

